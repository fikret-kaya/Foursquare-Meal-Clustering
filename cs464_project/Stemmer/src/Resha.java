import java.util.List;
import java.util.Map;

/**
 * This class is an enum in order to provide thread-safe and lazy-initialized singleton stemmer object.
 * Uses a word-stem dictionary generated by Nuve (https://github.com/hrzafer/nuve)
 * If word includes apostrophe ('), this class returns the section before the apostrophe.
 */
public enum Resha implements Stemmer {

    Instance;
    public final Map<String, String> map;

    private Resha() {
        map = StemDictionaryReader.GetMap();
    }

    @Override
    public String stem(String token) {

        int apostropheIndex = token.indexOf("\'");

        if (apostropheIndex > -1) {
            return token.substring(0, apostropheIndex);
        }
        if (map.containsKey(token)) {
            return map.get(token);
        }

        return token;
    }

    @Override
    public String stem(List<String> tokens, int index) throws UnsupportedOperationException {
        return null;
    }
}
